* Major changes in NeuG 0.04

  Released 2012-10-XX, by NIIBE Yutaka

** Update of ChibiOS/RT
ChibiOS/RT is updated to newer 2.4.3.

** A bit of improved performance
A few percent of improvement for generation speed, due to finer lock.

** Health tests run for NEUG_MODE_RAW
Health tests run when NEUG_MODE_RAW (CRC32 filter output).

** More runtime checks: tool/neug_check.py 
Now, we can observe max counts of repeat count test, adaptive
propotion test 64, and adaptive propotion test 4096.


* Major changes in NeuG 0.03

  Released 2012-10-09, by NIIBE Yutaka

** Change RNG constuct.
We replace all basic components again, to conform NIST SP 800-90B.
Now, we use two analog inputs use in addition to Vref and Temperature
Sensor.  We take advantage of another A/D convertor, ADC2.

In former versions, we use LSBs of inputs.  From this version, we use
all bits, and put them to CRC32 calculation unit.  That's because we
can get more entropy when using full bits.

The central component, the conditioning component, is the one with
SHA-256, to conform NIST SP 80-90B.

** New ADC (A/D convertor) driver
Now, we use our own ADC driver, so that we can use ADC2 and we can
control ADC for our particular usage (such that put it to CRC32
calculation unit).

** Selection of output
Using "stty" command, we can now select one of three outputs: final
output (conditioned), CRC32 filtered raw data before conditioning, and
raw input data of ADC.

** USB strings for revision detail, configure options, and system service.
USB strings now have more information.  There are revision detail
string, configure options string, system service version string, as
well as vendor string and product string.  These strings could be
examined to check NeuG device.

** New mandatory option '--vidpid' for configure
You must specify USB vendor ID and product ID for Gnuk.
The file NEUG_USB_DEVICE_ID lists valid USB device IDs.

** Health tests
Health tests are implemented to conform NIST SP 800-90B.  There are
three tests, repetition count test, adaptive proportion test 64,
and adaptive proportion test 4096.

** System service blocks at the beginning of flash ROM.
Once flash ROM is protected, first 4-KiB cannot be modified.  Gnuk use
this area for "system service".  NeuG has compatible system service
block as Gnuk.  Note that this area will not be able to be modified by
firmware upgrade (or by any method).

** New tool: neug_upgrade.py
The tool neug_upgrade.py is to send reGNUal to NeuG device.  Then, we
put new NeuG binary (or any binary, say, Gnuk) into the device with
reGNUal.

** New tool: neug_check.py
The tool neug_check.py is to check the device condition.  You can see
error counters of NeuG device with this tool.


* Major changes in NeuG 0.02

  Released 2012-08-30, by NIIBE Yutaka

** Change RNG constuct.
We replace all basic components.  Now, we use WELL 512a structure
for Physical-based RNG.

** New USB stack.
Now, we use our own USB stack (taken from Gnuk).


* Major changes in NeuG 0.01

  Released 2011-11-14, by NIIBE Yutaka

** Support more boards
NeuG now supports FST-01, STM8S DISCOVERY, CQ-STARM and STBee, too.

** Change RNG construct.
Basic technology is basically same (CRC-16, TinyMT), but we add
FNV32 hash as an output function, and give a seed to TinyMT from
Physical-based RNG.

** Add Test results.
Under test-results directory, we put results of RNG test by rng-tools,
NIST STS 2.1.1, and Dieharder 3.31.1.


* Major changes in NeuG 0.00

  Released 2011-07-14, by NIIBE Yutaka

** This is initial release.

Local Variables:
mode: outline
End:
